#+TITLE: Mastering Emacs
#+TAGS: 读书笔记, Emacs

** Emacs Philosophy

#+BEGIN_QUOTE
Emacs is a tinkerer's editor.

Truly, in Emacs, you can change everything.
#+END_QUOTE

Vim使用 *Vimscript* 来编写plugin, Emacs使用 *Emacs Lisp* 来编写Emacs以及
plugin. 也就是说, Emacs拥有着Lisp的 =code= 即 =data= 的特性.

使用Emacs, 经过了最初的适应阶段之后, 要想继续研究如何更高好地利用Emacs,
=Elisp= 是必学之物. 使用Elisp, 就可以将Emacs改造成你想要的.

Emacs除了可以让人随心所欲的定制化以外, 还有一个很出名的地方就在于其复杂的快捷键.

它底层实现了N多函数, 这其中有一部分是对「End-user」用户公开的, 也就是我们
可以通过 =M-x= 输入函数名称进行调用的. 这一部分函数, 在本书中被称作 *Command*.
在Command中, 一些最经常使用的函数, 被事先按一定的规则, 绑定到了快捷键上.

说起来有点有拗口, 实际上如下图所示:

[[../blog/images/emacs_functions.png]]

Emacs中有几个 =Modifier keys=, 如下表所示:

| Modifier | Full Name          |
|----------+--------------------|
| /        |                    |
| C-       | Control            |
| M-       | Meta               |
| S-       | Shift              |
| s-       | Super (not shift!) |
| H-       | Hyper              |

** Emacs Help System

Emacs中的N多函数, 不可能每个都能记住, 需要使用某些函数的时候, 我们只需要向
帮助系统求助即可. Emacs的帮助系统包含三个部分: Info Manual, Apropos,
Describe System.

*** Info Manual

Emacs的手册是用TeXinfo写的, 可以通过 =C-h i= 或者 =M-x info= 打开.

里面包含下面的快捷键:

| Key     | Purpose                                   |
|---------+-------------------------------------------|
| [ and ] | Previous / next node                      |
| l and r | Go back / forword in history              |
| n and p | Previous / next sibling node              |
| u       | Goes up one level to a parent node        |
| Space   | Scroll one screen at a time               |
| TAB     | Cycles through cross-references and links |
| RET     | Opens the active link                     |
| m       | Prompts for a menu item name and opens it |
| q       | Closes the info browser                   |

*** Apropose

当你不确定自己要找的函数叫什么名字的时候, 可以通过Apropose来定位它.

通过 =C-h a= 或者 =M-x apropos-command= 来访问最常用的Apropose命令.

其它的Apropose命令包括:

- apropos
- apropos-command
- apropos-documentation
- apropos-library
- apropos-user-option
- apropos-value

*** The Describe System

当你明确知道自己要找的东西名称时, describe system可以告诉你其功能是什么.

常用的函数如下:

| 函数              | 快捷键 |
|-------------------+--------|
| describe-mode     | C-h m  |
| describe-function | C-h f  |
| describe-variable | C-h v  |
| describe-key      | C-h k  |


** The Theory of Movement

在Emacs中, 移动光标分为三类: local, regional, or global.

- Local Movement

最常见的一类移动, 平时编辑文本时, 按语法单元移动光标, 即为 =local
movement=. 例如, 按字符、单词、行、句子、段落、balanced expression 等等进
行移动.

- Regional Movement

和local movement类似, 但区域更大. 例如, 写代码时, 移动区域为函数或类. 写文
章时, 移动区域为章节等等.

- Global Movement

移动区域为从一个Buffer到另一个Buffer, 或者从一个Window到另一个Window.

*** Basic Movement Commands

The four basic movement commands are:

| Key Binding | Purpose                    |
|-------------+----------------------------|
| C-f         | Move forward by character  |
| C-b         | Move backward by character |
| C-p         | Move to previous line      |
| C-n         | Move to next line          |

Moving by line:

| Key Binding | Purpose                                 |
|-------------+-----------------------------------------|
| C-a         | Move point to the beginning of the line |
| C-e         | Move point to the end of the line       |
| M-m         | Move Point to the first non-whitespace  |
|             | character on this line                  |


Moving by word:

| Key Binding | Purpose               |
|-------------+-----------------------|
| M-f         | Move forward by word  |
| M-b         | Move backward by word |

Moving by sentence:

| Key Binding | Purpose                       |
| M-a         | Move to beginning of sentence |
| M-e         | Move to end of sentence       |


Moving by paragraph:

| Key Binding | Purpose                             |
|-------------+-------------------------------------|
| M-}         | Move forward to end of paragraph    |
| M-{         | Move backward to start of paragraph |

Moving by Defun:

| Key Binding | Purpose                    |
|-------------+----------------------------|
| C-M-a       | Move to beginning of defun |
| C-M-e       | Move to end of defun       |

Moving by S-Expressions

S-Expression是Lisp中的术语, 指的是 =balanced expressions=.

balanced expressions通常包括两类:

- 字符串

字符串一般由单引号或双引号包起, 两端平衡.

- 括号

()[]{}<>

| Key Binding | Purpose                            |
|-------------+------------------------------------|
| C-M-f       | Move forward by s-expression       |
| C-M-b       | Move backward by s-expression      |
| C-M-d       | Move down into a list              |
| C-M-u       | Move up out of a list              |
| C-M-n       | Move forward to the next list      |
| C-M-p       | Move backward to the previous list |
| C-M-k       | Kill the sexp following point      |

其它常用移动快捷键:

| Key Binding | Purpose                        |
|-------------+--------------------------------|
| C-x C-f     | Find (open) a file             |
| C-x C-s     | Save the buffer                |
| C-x b       | Switch buffer                  |
| C-x k       | Kill (close) a buffer          |
| C-x C-b     | Display all open buffers       |
| C-x C-c     | Exits Emacs                    |
| Esc Esc Esc | Exits out of prompts, regions, |
|             | prefix arguments and return    |
|             | to just one window             |
| C-/         | Undo changes                   |

编程实用命令设置:

| Command            | Purpose                              |
|--------------------+--------------------------------------|
| M-x subword-mode   | Minor mode that treats CamelCase     |
|                    | as distinct words                    |
| M-x superword-mode | Minor mode that treats snake_case    |
|                    | as one word                          |
| M-x glasses-mode   | Minor mode that visually separates   |
|                    | CamelCase words into Camel_Case.     |
|                    | (it does not alter your buffer text) |

Scrolling:

| Key Binding | Purpose                             |
|-------------+-------------------------------------|
| C-v         | Scroll down one page                |
| M-v         | Scroll up one page                  |
| C-M-v       | Scroll down the other window        |
| C-M-S-v     | Scroll up the other window          |
| C-x <       | Scroll left                         |
| C-x >       | Scroll right                        |
| M-<         | Move to the beginning of the buffer |
| M->         | Move to the end of the buffer       |


*** Bookmarks and Registers

Emacs中的bookmards是存储在一个文件中的, 文件位置由变量
=bookmark-default-file= 控制.

| Key Binding | Purpose          |
|-------------+------------------|
| C-x r m     | Set a bookmark   |
| C-x r l     | List bookmarks   |
| C-x r b     | Jump to bookmark |

Emacs中的registers是临时性的, 一个register就是一个单独的字符.

| Key Binding | Purpose                                |
|-------------+----------------------------------------|
| C-x r n     | Store number in register               |
| C-x r s     | Store region in register               |
| C-x r SPC   | Store point in register                |
| C-x r +     | Increment number in register           |
| C-x r j     | Jump to register                       |
| C-x r i     | Insert content of register             |
| C-x r w     | Store window configuration in register |
| C-x r f     | Store frameset in register             |

*** Selections and Regions

在Emacs中, 一个Region的边界是由point和mark两者界定的.

| Key Binding | Purpose                                       |
|-------------+-----------------------------------------------|
| C-<SPC>     | Set the mark, and toggles the region          |
| C-u C-<SPC> | Jump to the mark, and repeated calls          |
|             | go further back the mark ring                  |
| C-x C-x     | Exchanges the point and mark, and reactivates |
|             | your last region.                             |

*** Searching and Indexing

| Key Binding | Purpose                                    |
|-------------+--------------------------------------------|
| C-s         | Begin an incremental search                |
| C-r         | Begin a backward incremental search        |
| C-M-s       | Begin a regexp incremental search          |
| C-M-r       | Begin a regexp backward incremental search |
| RET         | Pick the selected match                    |
| M-n         | Move to next item in search history        |
| M-p         | Move to previous item in search history    |
| C-s C-s     | Begin Isearch against last search string   |
| C-r C-r     | Begin backward Isearch against last        |
|             | search string                              |

Other Movement Commands:

| Key Binding | Purpose                                 |
|-------------+-----------------------------------------|
| M-r         | Re-position the point to the top left,  |
|             | middle left, or bottom left             |
| C-l         | Re-center the point to the middle, top, |
|             | or bottom in the buffer                 |
| C-M-l       | Re-position the comment or definition   |
|             | so it is in view in the buffer          |
| M-g M-g     | Go to line                              |
| M-g TAB     | Go to column                            |
| M-g c       | Go to character position                |


** The Theory of Edit

*** Killing and Yanking Text

| Key Binding     | Purpose                   |
|-----------------+---------------------------|
| C-d             | Delete character          |
| <backspace>     | Delete previous character |
| M-d             | Kill word                 |
| C-k             | Kill rest of line         |
| M-k             | Kill sentence             |
| C-M-k           | Kill s-expression         |
| C-S-<backspace> | Kill current line         |

其它常用快捷键:

| Key Binding | Kill Ring Purpose        | Clipboard |
|-------------+--------------------------+-----------|
| /           | /                        | /         |
| C-w         | Kill active region       | cut       |
| M-w         | Copy to kill ring        | copy      |
| C-M-w       | Append kill              |           |
| C-y         | Yank last kill           | paste     |
| M-y         | Cycle through kill ring, |           |
|             | replacing yanked text    |           |


*** Transposing Text

| Key Binding              | Purpose                 |
|--------------------------+-------------------------|
| C-t                      | Transpose characters    |
| M-t                      | Transpose words         |
| C-M-t                    | Transpose s-expressions |
| C-x C-t                  | Transpose lines         |
| M-x transpose-paragraphs | Transpose paragraphs    |
| M-x transpose-sentences  | Transpose sentences     |

*** Filling and Commenting

Filling:

| Key Binding        | Purpose                           |
|--------------------+-----------------------------------|
| M-q                | Refills the paragraph point is in |
| C-x f              | Sets the fill column width        |
| C-x .              | Sets the fill prefix              |
| M-x auto-fill-mode | Toggles auto-filling              |

Commenting:

| Key Binding     | Purpose                                    |
|-----------------+--------------------------------------------|
| M-;             | Comment or uncomment DWIM (do what i mean) |
| C-x C-;         | Comment or uncomment line                  |
| M-x comment-box | Comments the region but as a box           |
| M-j             | Inserts new line and continues             |
|                 | with comment on a new line                 |

*** Search and Replace

| Key Binding        | Purpose                         |
|--------------------+---------------------------------|
| C-M-%              | Query regexp search and replace |
| M-%                | Query search and replace        |
| M-x replace-string | Search and replace              |
| M-x replace-regexp | Regexp search and replace       |

*** Changing Case

| Key Binding                | Purpose                  |
|----------------------------+--------------------------|
| C-x C-u                    | Uppercase the region     |
| C-x C-l                    | Lowercase the region     |
| M-x upcase-initials-region | Capitalize the region    |
| M-c                        | Capitalize the next word |
| M-u                        | Uppercase the next word  |
| M-l                        | Lowercase the next word  |

*** Counting Things

| Command                     | Description                    |
|-----------------------------+--------------------------------|
| M-x count-lines-region      | Counts number of lines         |
|                             | in the region                  |
| M-x count-matches           | Counts number of patterns      |
|                             | that match in a region         |
| M-x count-words             | Counts words, lines, and chars |
|                             | in the buffer                  |
| M-x count-words-region, M-= | Counts words, lines, and chars |
|                             | in the region                  |

*** Text Manipulation

| Command                       | Description                        |
|-------------------------------+------------------------------------|
| M-x delete-duplicate-lines    | Delete the first duplicate         |
|                               | line it encounters, starting       |
|                               | from the top                       |
| M-x flush-lines               | Flush (delete) all lines in a      |
|                               | region that match a pattern        |
| M-x keep-lines                | Keep all lines in a region that    |
|                               | match a pattern and removes all    |
|                               | non-matches                        |
| C-o                           | Insert a blank line after point    |
| C-x C-o                       | Delete all blank lines after point |
| C-M-o                         | Split a line after point, keeping  |
|                               | the indentation                    |
| M-^                           | Join the line the point is on with |
|                               | the one above                      |
| M-SPC                         | Delete all but one space or tab to |
|                               | the left and right of the point    |
| M-\\                          | Delete all spaces and tabs around  |
|                               | the point                          |
| M-x whitespace-mode           | Minor mode that highlights all     |
|                               | whitespace characters              |
| M-x whitespace-newline-mode   | Minor mode that displays newline   |
|                               | character with a $                 |
| M-x whitespace-toggle-options | Display a toggle menu of all       |
|                               | whitespace-mode options            |
| M-x whitespace-report         | Show whitespace issues             |
| M-x whitespace-clean-up       | Attemp automatic cleanup           |

*** Keyboard Macros

| Key Binding | Description           |
|-------------+-----------------------|
| C-x (       | Start macro recording |
| C-x )       | Stop macro recording  |
| C-x e       | Play last macro       |

*** Sorting and Aligning

| Command                 | Description                        |
|-------------------------+------------------------------------|
| M-x sort-lines          | Sort alphabetically                |
| M-x sort-fields         | Sort field lexicographically       |
| M-x sort-numeric-fields | Sort field numerically             |
| M-x sort-columns        | Sort column alphabetically         |
| M-x sort-paragraphs     | Sort paragraphs alphabetically     |
| M-x sort-regexp-fields  | Sort by regexp-defined fields      |
|                         | lexicographically                  |
| M-x align               | Align region based on align rules  |
| M-x align-current       | Align section based on align rules |
| M-x align-regexp        | Align region based on regexp       |
