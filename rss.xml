<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>為學日益, 為道日損</title>
    <link>http://lijigang.github.io/</link>
    <description>static site generator</description>
    <pubDate>Mon, 16 Jan 2017 20:17:24 CST</pubDate>
    <lastBuildDate>Mon, 16 Jan 2017 20:17:24 CST</lastBuildDate>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>Org-page static site generator (https://github.com/kelvinh/org-page)</generator>
    <item>
      <title>读书笔记: 技术简史</title>
      <link>http://lijigang.github.io/blog/2017/01/16/读书笔记-技术简史/</link>
      <description><![CDATA[<section id="content" role="main">
    <div id="outline-container-sec-" class="row post-content">
        <div class="col-md-2"></div>
            <h1>读书笔记: 技术简史</h1>
            
<div class="figure">
<p><img src="/assets/blog/2017/01/16/读书笔记-技术简史/rulingwaves.png" alt="rulingwaves.png" />
</p>
</div>

    </div>
</section>
]]></description>
      <pubDate>2017-01-16</pubDate>
      <guid>http://lijigang.github.io/blog/2017/01/16/读书笔记-技术简史/</guid>
    </item>
    <item>
      <title>图解|读书: 游戏化实战</title>
      <link>http://lijigang.github.io/blog/2017/01/16/图解|读书-游戏化实战/</link>
      <description><![CDATA[<section id="content" role="main">
    <div id="outline-container-sec-" class="row post-content">
        <div class="col-md-2"></div>
            <h1>图解|读书: 游戏化实战</h1>
            <p>
游戏中让人「欲罢不能」的元素如何应用在我们的工作和生活中?
</p>


<div class="figure">
<p><img src="/assets/blog/2017/01/16/图解|读书-游戏化实战/gamefication.png" alt="gamefication.png" />
</p>
</div>

    </div>
</section>
]]></description>
      <pubDate>2016-07-04</pubDate>
      <guid>http://lijigang.github.io/blog/2017/01/16/图解|读书-游戏化实战/</guid>
    </item>
    <item>
      <title>Computer Science 是什么鬼</title>
      <link>http://lijigang.github.io/blog/2017/01/16/computer-science-是什么鬼/</link>
      <description><![CDATA[<section id="content" role="main">
    <div id="outline-container-sec-" class="row post-content">
        <div class="col-md-2"></div>
            <h1>Computer Science 是什么鬼</h1>
            <p>
作为一个学了七年 CS 的学渣, 一直没去了解过 CS 到底意味着什么. Computer Science 与其它
Science 的本质区别在哪? 它与其它 Science 的共同点又在哪? 直到最近读了=Problem
Solving with Algorithms and Data Structures= 这书后, 才开始去了解 CS 到底是什么鬼.
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> What is CS?</h2>
<div class="outline-text-2" id="text-1">
<p>
<b><code>Computer Science</code> 就是一门专门研究 <code>Problems</code> 与 <code>Problem-solving</code> 的学科.</b>
</p>

<p>
面对一个 <code>问题</code>, 一个 <code>Computer Sciencist</code> 的目标就是找出一个 <code>算法</code> (即解决方案),明确指示出如何一步步地解决该问题.
</p>

<p>
当然, 这里还会涉及到 <b>可计算性</b> 的问题(P 与 NP), 面对不可计算的问题, 设计什么样的算法来满足解决问题的目标, 也是一个 CS 的研究内容.
</p>

<p>
一个计算机科学家在解决问题的过程中, 要多次进行抽象:
</p>

<ul class="org-ul">
<li>首先是对 <code>待解决的问题</code> 进行一次抽象
</li>
</ul>

<p>
现实世界里的问题一般都会包含比较多的条件, 把现实世界里的问题明确表示的过程中,不可避免地要进行一次抽象, 去掉无关的边缘条件, 保留该问题最核心的内容.
</p>

<ul class="org-ul">
<li>其实是对 <code>解决方案</code> 的抽象
</li>
</ul>

<p>
我们开车的时候, 踩一脚油门车就动了, 我们不需要去了解车是怎么打火的, 发动机是怎么运作的. 这种对解决方案的包装, 展示给最终用户的界面, CS 里叫 Interface, 现在互联网圈叫用户体验.
</p>

<p>
上述的过程, 可以用下图来表示:
</p>


<div class="figure">
<p><img src="/assets/blog/2017/01/16/computer-science-是什么鬼/cs.png" alt="cs.png" />
</p>
</div>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> What is Programming?</h2>
<div class="outline-text-2" id="text-2">
<p>
<b><code>编程</code> 就是把 <code>算法</code> (问题的解决方案) 用某一种编程语言给表述出来的过程.</b>
</p>

<p>
也就是说, 编程的第一步是 <b>你已有某一问题的解决方案在手</b> , 没有 <code>算法</code> 就没有程序.
</p>

<p>
CS 不是研究如何编程的学科, 但编程, 却是一个 Computer Scientist 工作中的一个重要组成.
毕竟, CS 目标是 <b>解决问题</b> , 编程是把这个 <b>问题的解决方案</b> 给最终实现的基础操作,
重要性可想而知.
</p>

<p>
综合以上两部分, 总结一下计算机科学家的工作主要是:
</p>

<ol class="org-ol">
<li>把一个现实问题抽象, 用 <code>Data</code> 来表示
</li>
<li>针对该问题, 设计出相应的解决方案 <code>算法</code>
</li>
<li>把该 <code>算法</code> 用编程语言给表述出来 <code>程序</code>
</li>
<li>计算机运行该 <code>程序</code> , 从而解决现实问题
</li>
</ol>

<p>
把上面的步骤用图形化表示就是:
</p>


<div class="figure">
<p><img src="/assets/blog/2017/01/16/computer-science-是什么鬼/programming.png" alt="programming.png" />
</p>
</div>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Programming Languages</h2>
<div class="outline-text-2" id="text-3">
<p>
编程语言提供了 <code>Data Structure</code> 和 <code>Control Structure</code>.
</p>
</div>

<div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> Data Structure</h3>
<div class="outline-text-3" id="text-3-1">
<blockquote>
<p>

</p>

<p>
计算机只认识 <code>0</code> 和 <code>1</code>.
</p>
</blockquote>

<p>
相信每个 CS 都听过上面这句, 所有 Data 对应到计算机执行指令的时候都是 0 和 1, 但各个编程语言会对这些 01 串进行「包装」, 这样我们在使用这些语言的时候, 就可以从包装后的「砖块」层级来考虑如何把算法用该语言表述出来, 而不需要以 01 串的角度来思考.
</p>

<p>
各编程语言本身自带的这些对 01 串的「包装」叫做 <code>Primitive Data Types</code>. 可以理解为天赋属性. 语言好坏, 很多时候从这里就可以做一个区分了.
</p>

<p>
对于复杂的现实世界问题, 所有编程语言都不可能出厂时都「包装」好「砖块」让你砌墙.
所以后来才会有了 <code>Abstract Data Type</code> 的概念. 通过支持自定义类, 你可以自己去「包装」现实世界, 抽象数据类型出来, 想怎么玩就怎么玩.
</p>
</div>
</div>

<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> Control Structure</h3>
<div class="outline-text-3" id="text-3-2">
<p>
有了数据结构, 我们可以表示现实世界中的问题了. 但仍需要更重要的一个东西来把我们的
<code>算法</code> 表述出来. 表述算法的语句就是 <code>Control Structure</code>.
</p>

<p>
语句控制可以大概分为三类:
</p>

<ol class="org-ol">
<li>Sequential Processing (顺序执行)
</li>
<li>Selection (选择分支执行)
</li>
<li>Iteration (重复执行)
</li>
</ol>

<p>
只要有了这三类语句控制, 我们就可以表述算法了. 剩下的工作就是把 <code>算法</code> 给翻译成这些语句的工作了, 也就是 <code>编程</code>.
</p>
</div>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Which language?</h2>
<div class="outline-text-2" id="text-4">
<p>
看完了上面的内容, 你还在纠结「哪个编程语言更好」吗?
</p>
</div>
</div>

    </div>
</section>
]]></description>
      <pubDate>2016-06-13</pubDate>
      <guid>http://lijigang.github.io/blog/2017/01/16/computer-science-是什么鬼/</guid>
    </item>
    <item>
      <title>科学是什么鬼</title>
      <link>http://lijigang.github.io/blog/2017/01/16/科学是什么鬼/</link>
      <description><![CDATA[<section id="content" role="main">
    <div id="outline-container-sec-" class="row post-content">
        <div class="col-md-2"></div>
            <h1>科学是什么鬼</h1>
            <p>
我们总是会听到「这不科学」的说法, 那到底什么是「<a href="http://www.wikiwand.com/zh/%25E7%25A7%2591%25E5%25AD%25A6">科学</a>」?
</p>

<p>
在这里要先区分下 <code>科学</code> 与 <code>科学研究方法</code> 两个概念:
</p>

<ol class="org-ol">
<li>科学是探寻事物运作之明确规律的学科
</li>
<li>科学研究方法用胡适的话来说, 就是「大胆假设, 小心求证」.
</li>
</ol>

<p>
整个科学的发展史就是一部人类使用科学研究方法, 在现有基础上, 不断摸索着接近真理的纠正史. 也就是说, 科学从来不是一个「正确」的同意词, 它本身要求对科学理论要保持一定的怀疑态度.
</p>

<p>
这也从根本上导致了科学是一门动态发展的学科, 科学方法是一门不断优化人类认知这个世界的优良工具.
</p>

<p>
我试着用图表的形式展现这种科学发展方式:
</p>


<div class="figure">
<p><img src="/assets/blog/2017/01/16/科学是什么鬼/science.png" alt="science.png" />
</p>
</div>

    </div>
</section>
]]></description>
      <pubDate>2016-02-17</pubDate>
      <guid>http://lijigang.github.io/blog/2017/01/16/科学是什么鬼/</guid>
    </item>
    <item>
      <title>O2O与电子商务</title>
      <link>http://lijigang.github.io/blog/2017/01/16/o2o与电子商务/</link>
      <description><![CDATA[<section id="content" role="main">
    <div id="outline-container-sec-" class="row post-content">
        <div class="col-md-2"></div>
            <h1>O2O与电子商务</h1>
            <p>
O2O与电子商务这两种商业模式是目前较为火爆和成熟的, 但对两者的定义与区别, 一直没搞明白. 最近几天看了点书, 也做了些思考, 在这里做个总结.
</p>

<p>
在整个商业活动过程中, 可以分为三个阶段:
</p>

<ol class="org-ol">
<li>营销
</li>
<li>交易
</li>
<li>服务体验
</li>
</ol>

<p>
在没有电子商务这种模式之前, 这三个阶段的活动在现实世界中, 被无数的商业钻研和实践着.
</p>

<p>
后来互联网产生, 首先出现了互联网营销这个新型的渠道, 给线下商家增加了一个新的增加流量的入口. 紧接着就是线上出现了很多的体验, 诸如在线视频(对应线下影院), 在线新闻(对应线下纸媒) 等等. 后来终于出现了电子支付功能, 线下的交易也被搬到线上.
</p>

<p>
在互联网这个虚拟世界里, 也有着独立的一套「营销→交易→服务体验」的商业活动.
</p>

<p>
但发展到这里, 线上的虚拟世界和线下的现实世界的两种商业活动, 基本上还是隔离状态. 后来随着互联网越来越成熟, 线上和线下发生了不可避免的融合, 出现了一些诸如线上交易, 线下体验(团购)的新型商业模式.
</p>

<p>
虚拟世界和现实世界的交互, 主要包含两个交界点:
</p>

<ol class="org-ol">
<li>现实世界 → 虚拟世界  (电子标签)
</li>
<li>虚拟世界 → 现实世界  (电子凭证)
</li>
</ol>

<p>
从现实世界到虚拟世界, 需要一个手段, 可以将实物的相关信息对应到虚拟世界中, 最佳方式为增强现实(AR)技术和NFC技术, 但因这种技术现在仍为普及, 目前可用技术中, 最为常用的手段即为 <b>二维码</b>.
</p>

<p>
从虚拟世界到现实世界, 也需要一个手段, 可以将支付后的这种状态真实可靠的告知到现实世界.
目前最为常用的手段也是 <b>二维码</b>.
</p>

<p>
这种新型商业模式, 即为O2O. 它有几种很鲜明的特点:
</p>

<ol class="org-ol">
<li>支付方式为在线支付
</li>
<li>服务体验一般为线下体验
</li>
<li>支付环节和服务体验环节一般不连续, 即先支付, 后在约定日期到店享受服务.
</li>
<li>当前阶段主要领域为「生活消费领域」, 一般涉及「客流」
</li>
</ol>


<p>
而电子商务的特点:
</p>
<ol class="org-ol">
<li>泛指电子支付的商业活动
</li>
<li>一般涉及「物流」
</li>
</ol>

    </div>
</section>
]]></description>
      <pubDate>2016-01-26</pubDate>
      <guid>http://lijigang.github.io/blog/2017/01/16/o2o与电子商务/</guid>
    </item>
    <item>
      <title>键盘应该这样改键</title>
      <link>http://lijigang.github.io/blog/2017/01/16/键盘应该这样改键/</link>
      <description><![CDATA[<section id="content" role="main">
    <div id="outline-container-sec-" class="row post-content">
        <div class="col-md-2"></div>
            <h1>键盘应该这样改键</h1>
            
<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 为什么要改键</h2>
<div class="outline-text-2" id="text-1">
<p>
现在每天大约要使用电脑10个小时, 这中间至少有5个小时以上的时间, 是需要使用键盘打字的. 所以对于打字速度的提升, 哪怕是只有一点, 对于整体效率也是一个极大的促进.
</p>

<p>
而我对于打字速度的提升, 主要是从下面几方面入手:
</p>

<ul class="org-ul">
<li>盲打
</li>
</ul>

<p>
一边盯着键盘一边打字, 打了半天发现中间打错了, 再返回去修改, 这种打字方法严重影响效率. 解决办法很简单, 练习盲打. 把键位给背熟, 形成肌肉记忆, 当你想按某个键的时候,
不需经过你的思考, 手指已经条件反射地按到了那个键.
</p>

<ul class="org-ul">
<li>五笔
</li>
</ul>

<p>
最开始上网的时候, 只有「智能ABC」和「王码五笔」可以选择. 当时的「智能ABC」输入法,
打字时重码特别多, 想要打准某个字, 需要翻好几页来选中目标项. 为了解决这个问题, 当时就去学习了「五笔」输入法, 基本上不存在重码的问题. 当然, 现在的「搜狗输入法」已经做到了词频智能调整, 你输入拼音后目标项一般都在前面, 如果不是对五笔特别喜欢, 可以现代的拼音输入法, 也完全可以解决该问题.
</p>

<ul class="org-ul">
<li>改键
</li>
</ul>

<p>
现在绝大部分键盘的键位布局, 在 <code>Home Row</code> 上A键左边的键都设置为「Caps Lock」,但我平时输入大写字母时, 都用的Shift键, 极少使用大写锁定键. 这么重要的一个位置的键就这么被闲置浪费了. 而大部分键盘的 <code>Control</code> 键却又在左下角这么一个难以在「盲打」情况下被精准按到的尴尬位置. 有尴尬就有解决的办法.
</p>

<p>
本文主要就是讲 <code>Macbook</code> 上怎么进行 <code>改键</code> , 使得按键更舒服, 打字效率更高.
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 键盘知识</h2>
<div class="outline-text-2" id="text-2">
<p>
键盘我们每天都在使用, 但你知道键盘上的按键都有哪些分类吗? 如果按 <b>单独按</b> 与*组合按* 这一维度, 和 <b>短按</b> 与 <b>长按</b> 这一维度做个2*2矩阵:
</p>


<div class="figure">
<p><img src="/assets/blog/2017/01/16/键盘应该这样改键/keymaps.png" alt="keymaps.png" />
</p>
</div>

<ol class="org-ol">
<li>第一象限

<ul class="org-ul">
<li>单独 &amp; 短按
</li>
<li>75% 以上的击键都使用这个象限的键位
</li>
<li>包括字母, 数字, 部分符号等
</li>
<li>按下这区域键位, 显示器上即显示该符号
</li>
</ul>
</li>

<li>第二象限

<ul class="org-ul">
<li>单独 &amp; 长按
</li>
<li>大约5%的击键使用的这个象限的键位
</li>
<li>包括Esc, Backspace, Delete等
</li>
<li>长按该区域键位, 重复执行该键位的功能
</li>
</ul>
</li>

<li>第三象限

<ul class="org-ul">
<li>组合 &amp; 长按
</li>
<li>大约15%的击键使用的这个象限的键位
</li>
<li>包括Control, Shift, Alt等
</li>
<li>长按该区域键位, 同时再按第一象限键位, 发送事先指定功能
</li>
</ul>
</li>

<li>第四象限

<ul class="org-ul">
<li>组合 &amp; 短按
</li>
<li>目前大部分键盘都不支持该区域按键
</li>
<li>可以通过软件设置, 支持该区域, 提供额外的命名空间
</li>
</ul>
</li>
</ol>


<p>
第一象限的按键是平时的正常文本输入区域, 无需做更改.
</p>

<p>
第二象限和第三象限, 可以组合起来使用, 即单独按某一按键时, 发送第二象限功能;组合该键和第一象限键位时, 发送第三象限功能.
</p>

<p>
第四象限的按键可以通过软件设置, 将平时不太使用的键给映射为其它键. 相当于是增加了一个额外的命名空间.
</p>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 组合第二象限和第三象限</h2>
<div class="outline-text-2" id="text-3">
<p>
组合第二象限和第三象限的功能, 在Mac OS下只需要使用现在的软件, 勾选一下鼠标就可以实现.
</p>

<ol class="org-ol">
<li>下载安装 <a href="https://pqrs.org/osx/karabiner/index.html.en">Karabiner</a>
</li>
<li>打开界面, 选中「Control<sub>L</sub> to Control<sub>L</sub> (+ When you type control<sub>L</sub> only,
send Escape)」
</li>
<li>Done.
</li>
</ol>


<div class="figure">
<p><img src="/assets/blog/2017/01/16/键盘应该这样改键/karabiner.png" alt="karabiner.png" />
</p>
</div>


<p>
现在你单独按键盘左边的control键时, 发送的是Esc. (使用Vim的同学笑了~~). 按下
Control+其它键时, 仍然发送Control, 跟之前使用完全一样.
</p>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Caps Lock改到Control</h2>
<div class="outline-text-2" id="text-4">
<p>
在Mac OS下, 把Caps Lock键映射到Control键, 系统设置就可以了.
</p>

<ol class="org-ol">
<li>打开「System Preferences」
</li>
<li>选择「Keyboard」
</li>
<li>选择「Modifier Keys」
</li>
<li>把Caps Lock映射为Control
</li>
<li>Done
</li>
</ol>


<div class="figure">
<p><img src="/assets/blog/2017/01/16/键盘应该这样改键/system_preference.png" alt="system_preference.png" />
</p>
</div>

<p>
总结下现在所做的工作:
</p>

<ol class="org-ol">
<li>把Caps Lock映射成了Control
</li>
<li>把Control变成了单独按时, 发送Esc; 组合按时, 发送Control.
</li>
</ol>

<p>
即, 我们现在单独按Caps Lock时, 发送Esc; 按下Caps Lock和c时, 会发送Control-C.
</p>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> 增加第四象限按键</h2>
<div class="outline-text-2" id="text-5">
<p>
我们可以指定某个按键为多个按键的组合, 这样可以额外增加一个命名空间, 该键和其它键的组合就不会和其它按键冲突. 比如设置右Command键为「ctrl+shift+cmd+opt」,这样当我们按右command+F时, 相当于按了「ctrl+shift+cmd+opt+F」.
</p>

<p>
这种给指定按键映射为多个按键的操作, 同样可以通过Seil 和 Karabiner完成.
</p>

<p>
首先, 我们需要在Seil这个软件中, 把右Cmd键改成F19的码值.
</p>

<ol class="org-ol">
<li>勾选「Change Command<sub>R」</sub>
</li>
<li>在右侧的keycode中填入F19的码值 80
</li>
</ol>


<p>
接着, 我们打开Karabiner:
</p>

<ol class="org-ol">
<li>选择「Misc &amp; Uninstall」
</li>
<li>点击「Open private.xml」
</li>
<li>输入以下内容
</li>
</ol>

<div class="org-src-container">

<pre class="src src-nxml">&lt;?xml version="1.0"?&gt; &lt;root&gt; &lt;item&gt; &lt;name&gt;F19 to F19&lt;/name&gt; &lt;appendix&gt;(F19 to
Hyper (ctrl+shift+cmd+opt) + F19 Only, F19)&lt;/appendix&gt;
&lt;identifier&gt;private.f192f19&lt;/identifier&gt; &lt;autogen&gt; --KeyOverlaidModifier--
KeyCode::F19, KeyCode::COMMAND_L, ModifierFlag::OPTION_L |
ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::ESCAPE &lt;/autogen&gt;
&lt;/item&gt; &lt;/root&gt;
</pre>
</div>

<p>
现在我们按键盘右侧的Command键, 其实就是发送的F19的码值. 而我们又设置了按F19的时候, 就发送「Command+Option+Shift+Control」, 这个组合键很少会和其它的快捷键有冲突.
然后我们可以怎么玩这个键呢?
</p>

<p>
最简单的使用办法就是把这个键做为激活应用程序快捷键, 右Cmd+F打开Firefox, 右Cmd+E
打开Excel, 这些快捷键都是全局生效的, 你在任意程序中按下, 都可以激活你设置的应用程序.
</p>

<p>
设置应用程序激活快捷键, 可以通过软件
<a href="http://www.keyboardmaestro.com/main/">Keyboard Maestro</a>完成.
</p>


<div class="figure">
<p><img src="/assets/blog/2017/01/16/键盘应该这样改键/maestro.png" alt="maestro.png" />
</p>
</div>
</div>
</div>

    </div>
</section>
]]></description>
      <pubDate>2015-11-09</pubDate>
      <guid>http://lijigang.github.io/blog/2017/01/16/键盘应该这样改键/</guid>
    </item>
    <item>
      <title>经济学原理</title>
      <link>http://lijigang.github.io/blog/2017/01/16/经济学原理/</link>
      <description><![CDATA[<section id="content" role="main">
    <div id="outline-container-sec-" class="row post-content">
        <div class="col-md-2"></div>
            <h1>经济学原理</h1>
            <div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 人们如何做出决策</a>
<ul>
<li><a href="#sec-1-1">1.1. 原理一: 人们面临权衡取舍</a></li>
<li><a href="#sec-1-2">1.2. 原理二: 机会成本</a></li>
<li><a href="#sec-1-3">1.3. 原理三: 理性人考虑边际量</a></li>
<li><a href="#sec-1-4">1.4. 原理四: 人们会对激励做出反应</a></li>
</ul>
</li>
<li><a href="#sec-2">2. 人们如何相互交易</a>
<ul>
<li><a href="#sec-2-1">2.1. 原理五: 贸易可以使每个人的状况都变得更好</a></li>
<li><a href="#sec-2-2">2.2. 原理六: 市场经济是个好方法</a></li>
<li><a href="#sec-2-3">2.3. 原理七: 政府 <b>有时可以</b> 改善市场结果</a></li>
</ul>
</li>
<li><a href="#sec-3">3. 整体经济如何运行</a>
<ul>
<li><a href="#sec-3-1">3.1. 原理八: 生活水平取决于生产率</a></li>
<li><a href="#sec-3-2">3.2. 原理九: 政府发行过多货币, 特价上升</a></li>
<li><a href="#sec-3-3">3.3. 原理十: 社会面临通货膨胀与失业之间的短期权衡取舍</a></li>
</ul>
</li>
</ul>
</div>
</div>
<p>
社会拥有的资源是 <b>有限的</b>, 因此不能生产人们希望拥有的所有物品与劳务. <b>经济学</b>
就是研究社会如何管理自己的稀缺资源.
</p>

<p>
经济学的十大原理:
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 人们如何做出决策</h2>
<div class="outline-text-2" id="text-1">
</div><div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> 原理一: 人们面临权衡取舍</h3>
<div class="outline-text-3" id="text-1-1">
<p>
人们在决定去选择一个东西的时候, 就意味着不得不放弃另一件东西. 所谓的做决策,
就是要求在一个目标与另一个目标之间进行权衡取舍.
</p>

<p>
不只是人会面临取舍, 社会也一样. 社会面临的取舍是在 <b>效率</b> 与 <b>平等</b> 之间.
</p>

<p>
效率是指社会能从其稀缺资源中得到的最大利益, 即经济蛋糕的大小.
</p>

<p>
平等是指将这些资源的成果平均地分配给其成员, 即如何分割这块蛋糕.
</p>
</div>
</div>

<div id="outline-container-sec-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> 原理二: 机会成本</h3>
<div class="outline-text-3" id="text-1-2">
<p>
人们面临权衡取舍, 做决策时就要比较各方案的成本与收益. 但行动的成本并不是一目了然. 这里涉及到 <b>机会成本</b> 的概念:
</p>

<blockquote>
<p>
一种东西的 <b>机会成本</b> 是为了得到这种东西所放弃的东西.
</p>
</blockquote>
</div>
</div>

<div id="outline-container-sec-1-3" class="outline-3">
<h3 id="sec-1-3"><span class="section-number-3">1.3</span> 原理三: 理性人考虑边际量</h3>
<div class="outline-text-3" id="text-1-3">
<p>
经济学家通常假设, 人都是 <b>理性的</b>.
</p>

<blockquote>
<p>
在机会成本为既定的条件下, 理性人(rational people) 系统而有目的地尽最大努力去实现其目标.
</p>
</blockquote>

<p>
理性人知道, 生活中的决策很少是非黑即白式的选择, 而往往是介于其间.  经济学家用 <b>边际变动(marginal change)</b> 来描述对现有行动计划的微小增量调整. 理性人通常通过比较 <b>边际利益</b> 与 <b>边际成本</b> 来做出决策.
</p>

<p>
为什么飞机票在快起飞时, 剩下空位置的票价特别低? <b>边际成本</b> 小于 <b>边际利益</b>.
</p>

<p>
为什么水比钻石便宜? 水的 <b>边际成本</b> 远小于钻石的 <b>边际成本</b>.
</p>
</div>
</div>

<div id="outline-container-sec-1-4" class="outline-3">
<h3 id="sec-1-4"><span class="section-number-3">1.4</span> 原理四: 人们会对激励做出反应</h3>
<div class="outline-text-3" id="text-1-4">
<blockquote>
<p>
<b>激励 (incentive)</b> 是引起一个人做出某种行为的某种东西.
</p>

<p>
比如惩罚或奖励的预期.
</p>
</blockquote>

<p>
<code>在经济学研究中, *激励* 起着中心作用.</code>
</p>

<p>
以前汽车并没有安全带, 人们开车缓慢而谨慎, 但一旦出现车祸, 司机的死亡率很高.
</p>

<p>
后来政府立法要求将安全带作为汽车的标配, 直接影响是:
</p>

<pre class="example">
当一个人系上安全带后, 发生车祸时存活的概率提高了.
</pre>

<p>
但间接影响是:
</p>

<pre class="example">
安全带法律改变了一个司机的成本-收益计算. 它降低了司机的车祸代价, 因为它降
低了司机的伤亡概率. 结果就是司机开车速度更快, 结果就是虽然车祸死亡人数下降,
但车祸次数上升.
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 人们如何相互交易</h2>
<div class="outline-text-2" id="text-2">
</div><div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> 原理五: 贸易可以使每个人的状况都变得更好</h3>
<div class="outline-text-3" id="text-2-1">
<p>
虽然在贸易过程中, 会有各种竞争存在. 但贸易使每个人都可以专门从事自己最擅长的活动. 通过与他人交易, 人们可以按较低的成本获得各种各样的物品与劳务.
</p>
</div>
</div>

<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> 原理六: 市场经济是个好方法</h3>
<div class="outline-text-3" id="text-2-2">
<blockquote>
<p>
<b>市场经济</b>
</p>

<p>
当许多企业和家庭在物品与劳务市场上相互交易时, 通过它们的分散决策配置资源的经济.
</p>
</blockquote>

<p>
市场经济由一只「看不见的手」通过「价格」这个工具来指引, 最终结果在大多数情况下会实现整个社会福利的最大化.
</p>

<blockquote>
<p>
请给我们我所要的东西吧, 同时, 你也可以获得你所要的东西.
</p>

<p>
这句话是交易的通义.
</p>
</blockquote>

<p>
经济参与者受利己心驱动, 而市场上这只「看不见的手」指引这种利己心去促进总体的经济福利.
</p>
</div>
</div>

<div id="outline-container-sec-2-3" class="outline-3">
<h3 id="sec-2-3"><span class="section-number-3">2.3</span> 原理七: 政府 <b>有时可以</b> 改善市场结果</h3>
<div class="outline-text-3" id="text-2-3">
<p>
既然市场这只「看不见的手」这么强大, 为什么我们还需要政府呢?
</p>

<p>
有两个原因:
</p>

<p>
第一个原因, 我们需要政府来保证实施 <code>产权 (property rights)</code> 的制度.
</p>

<blockquote>
<p>
产权: 个人拥有并控制稀缺资源的能力.
</p>
</blockquote>

<p>
如果你今天挣到的钱, 明天就会被别人抢走, 你也就不会有动力去挣钱了. 只有在保证个人可以拥有资源的情况下, 市场才能发挥作用.
</p>

<p>
第二个原因, 我们需要政府在 <b>市场失灵</b> 的时候进行调整.
</p>

<blockquote>
<p>
市场失灵可能的原因有:
</p>

<p>
外部性: 一个人的行为对旁边者福利的影响.
</p>

<p>
比如, 一家造纸厂, 加大生产规模, 同时并未投入污水处理设备的成本, 在市场看来,
它是成功的. 毕竟成本低, 收益高, 市场给他更大蛋糕吃. 但这工厂对环境的污染,
让生活在附近的人们受到了影响, 这个市场控制不了.
</p>

<p>
市场势力: 单个经济活动者对市场价格有显著影响的能力.
</p>

<p>
比如一个小镇上只有一家纯净水供应商, 价格完全由它来定. 市场平时是靠竞争来约束个人和利己行为的, 但这种垄断的情况, 市场显然失灵了.
</p>
</blockquote>

<p>
政府怎么干预经济呢? 也有两类: <code>促进效率</code> 和 <code>促进平等</code>.
</p>

<ul class="org-ul">
<li>对于造纸厂不投入污水处理设备的情况, 可以制定相关法规, 强制要求.
</li>
<li>对于小镇垄断纯净水价格的情况, 可以规定纯净水价格等.
</li>
</ul>

<p>
这些都可以提升资源的效率.
</p>

<p>
现在的很多公共政策, 比如个人所得税和福利制度, 目标就是为了实现更平等的经济福利分配.
</p>


<p>
但要注意的是, 政府是 <b>有时可以</b> 改善市场结果, 并不意味着它 <b>总能这样</b>.
</p>

<blockquote>
<p>
公共政策并不是由天使制定的, 而是由极不完善的政治程序制定的.
</p>

<ul class="org-ul">
<li>有时所设计的政策只是为了有利于政治上有权势的人
</li>
<li>有时政策是由动机良好但信息不充分的领导人制定的
</li>
</ul>
</blockquote>
</div>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 整体经济如何运行</h2>
<div class="outline-text-2" id="text-3">
</div><div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> 原理八: 生活水平取决于生产率</h3>
<div class="outline-text-3" id="text-3-1">
<p>
世界各国生活水平的差别是惊人的. 这些差别的原因就在于 <b>生产率</b>
</p>

<pre class="example">
生产率: 每一单位劳动投入所生产的物品与劳务数量.
</pre>

<p>
在考虑任何一项政策如何影响生活水平时, 关键问题是这项政策如何影响我们生产物品与劳务的能力.
</p>

<p>
为了提升生活水平, 决策者需要通过让工人受到良好的教育、拥有生产物品与劳务需要的工具, 以及获取最好的技术, 来提高生产率.
</p>
</div>
</div>

<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> 原理九: 政府发行过多货币, 特价上升</h3>
<div class="outline-text-3" id="text-3-2">
<blockquote>
<p>
通货膨胀: 经济中物价总水平的上升
</p>
</blockquote>

<p>
当一国政府发行了大量本国货币时, 货币的价值就下降了.
</p>
</div>
</div>

<div id="outline-container-sec-3-3" class="outline-3">
<h3 id="sec-3-3"><span class="section-number-3">3.3</span> 原理十: 社会面临通货膨胀与失业之间的短期权衡取舍</h3>
<div class="outline-text-3" id="text-3-3">
<p>
虽然长期来看, 物价水平高主要是货币量增加的结果, 但短期中问题变得更复杂.
</p>

<p>
大多数经济学家是这样描述货币注入的短期效应的:
</p>

<ul class="org-ul">
<li>经济中货币量增加 → 刺激社会整体支持水平 → 增加对物品与劳务的需求
</li>
<li>需求增加 → 企业提高物价 → 企业雇用更多工人 → 生产更多物品与劳务
</li>
<li>雇用更多工人 → 更少的失业
</li>
</ul>

<p>
即决策者需要在 <b>通货膨胀</b> 与 <b>失业</b> 之间做一个权衡取舍.
</p>


<p>
总结一下, 经济学十大原理如下图所示:
</p>


<div class="figure">
<p><img src="/assets/blog/2017/01/16/经济学原理/ten_principles.png" alt="ten_principles.png" />
</p>
</div>
</div>
</div>
</div>

    </div>
</section>
]]></description>
      <pubDate>2015-09-10</pubDate>
      <guid>http://lijigang.github.io/blog/2017/01/16/经济学原理/</guid>
    </item>
  </channel>
</rss>