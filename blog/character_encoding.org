#+TITLE: 字符编码是什么鬼
#+TAGS: Programming, 概念

文件或字符串乱码相信大家都没少遇到, 今天主要就来搞清楚字符串的编码到底是怎
么一回事.

首先, 我们放把自己置空, 假设现在从来没有字符编码, 刚有一台计算机产生, 让我
们来设计一套方案, 目标是让在计算机屏幕上看到我们平时所书写的字符. 你会怎么
做?

** 编码的本质

详细的思考过程, 不再详述, 只做大概的说明如下:

- 选定 =Character Set=

首先要确定「我们平时所书写的字符」, 到底都包括哪些字符, 也就是说, 要确定我
们到底要对哪些字符进行处理. 这里选定的字符集合叫做 Character Set 又叫
Character Repertoire.

- 规定 =Coded Character Set=

对于已经选定的 Character Set, 我们需要给他们进行编号, 每个字符给一个编号,
也就是字符集合到一个整数集合的映射. 这个映射就叫做 Coded Character Set,
又叫 CCS.

- 实现 =Character Encoding=

前两步所做的 *选定* 和 *规定* 操作都是纯数学或纯逻辑上的, 跟计算机仍没任何
联系. 在这一步, 就需要将之前规定好的编号给弄进计算机中. 因为编号已经是数字
了, 数字存储为二进制没什么问题. 这里只有一个问题需要注意: =存储编号的时候
使用多少字节?= 比如说, 某字符已经在第二步规定好了编号1, 在内存中存储的时候,
是使用 =0x01= 还是使用 =0x00 01= ?

以大家熟知的ASCII字符集和编码做为示例, 流程图如下:

[[./images/ascii_encoding.png]]

** 各种使用中的编码

如上节所述, 编码的本质, 就是把字符进行映射, 然后将映射后的数值进行存储.

尽管各种编码格式在历史上层出不穷, 但上面的本质始终不变. 各编码格式的区别在
于:

1. 对于所选定的字符集的不同. (ASCII, GBK, Big5, Unicode)
2. 对于选定的字符集进行编号时的不同. (即便有些向下兼容的编码, 仍会有些字符编码不一样)
3. 对于编号进行计算机存储时使用字节数的不同. (UTF-8, UTF-16, UTF-32)

各编码在上面各种情况下的详细区别示例, 大家可以参看Wikipedia和文末的参考链
接, 这里不再赘述.

** Python中的编码

对应到大家平时的使用上, 第一步基本上我们做不了太多的选择, 主要是第二步和第三步.

第二步到第三步的编码, 在编程里对应的就是 =Encode= 过程;

第三步到第二步的解码, 在编程里对应的就是 =Decode= 过程.

关于Python字节流和Unicode对象之间转换的详细示例, 可参考[[http://blog.jobbole.com/50345/][Python编码和Unicode]]

** 参考链接

1. [[http://www.imkevinyang.com/2010/06/%E5%85%B3%E4%BA%8E%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%EF%BC%8C%E4%BD%A0%E6%89%80%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E7%9A%84.html][关于字符编码，你所需要知道的]]
2. [[http://blog.jobbole.com/39309/][字符编码]]
3. [[http://www.regexlab.com/zh/encoding.htm][字符，字节和编码]]
4. [[http://www.cnblogs.com/skynet/archive/2011/05/03/2035105.html][字符集和字符编码（Charset & Encoding）]]
5. [[http://polaris.blog.51cto.com/1146394/377468/][字符编码详解]]
6. [[http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html][字符编码笔记：ASCII，Unicode和UTF-8]]
7. [[http://cenalulu.github.io/linux/character-encoding/][十分钟搞清字符集和字符编码]]
