#+TITLE:       神器Org-mode
#+AUTHOR:      lijigang <i@lijigang.com>
#+DATE:        2018-05-29 Tue
#+URI:         /blog/神器org-mode
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t

#+BEGIN_QUOTE
Org is a mode for keeping notes, maintaining TODO lists, and project planning
with a fast and effective plain-text system.

It also is an authoring system with unique support for literate programming and
reproducible research.
#+END_QUOTE

上面Org mode官网上介绍的文字基本覆盖了它可实现的功能, 但用词还是腼腆了点, 它就是
效率之神. 如果你喜欢管理记录, 喜欢GTD, 一定一定要学习下 =Org mode= , 学会它, 你会
放弃你所知道的一切其它的效率软件.

关于Org mode 在各方面使用的总结, 有很多优秀文章: [[https://emacs.cafe/emacs/orgmode/gtd/2017/06/30/orgmode-gtd.html][GTD]] , [[http://cachestocaches.com/2018/6/org-literate-programming/][Literate Programming]] ,
[[http://ehneilsen.net/notebook/orgExamples/org-examples.html][Cookbook]] , 当然也少不了最最经典的 [[http://doc.norang.ca/org-mode.html][Organize Your Life In Plain Text!]] .

我个人是Vim的忠实粉丝, 在我看来, Vim 的 mode editting 已经是文本编辑的效率极限了.
但自从体验了一次 Orgmode 的功能, 只能转投 Emacs 的阵营. 因不习惯 Emacs 变态的组
合式按键, 适应了好久. 万幸, Spacemacs 降世, 它竟然完美的综合了 Emacs 的强大包容
性和 Vim 的强大编辑效率, 我能想象到的最美好的事情不外如此!

一个不写代码的产品, 使用 Spacemacs 的 Orgmode 记录日常时间和项目, 就开始了:

* 安装 Org-mode
Org 现在已经是 Emacs 出厂自带的一部分了， 所以只要你现在打开 Emacs 就可以直接使
用 Org. 但如果你不想使用 Emacs 自带的 Org 版本， 想安装一个更新版本， 你可以有三
种办法来实现：

1. 使用 Emacs package system

   #+begin_src emacs-lisp
   M-x package-install RET org
   #+end_src

   这种安装方法，安装的org版本，需要看你配置源中对应的版本， 而且安装时需要确保
   没有org相关函数装载， 不推荐使用。

2. 把新版 Org 下载到本地

   [[https://orgmode.org/][Org 官网]] 有最新版本的压缩包可下载到本地， 然后只需要将解压后的目录加到
   load-path变量即可。

   #+begin_src emacs-lisp
   (add-to-list 'load-path "~/path/to/orgdir/lisp")
   #+end_src

   目前我使用的就是这个办法，并将解压后的目录放到了iCloud中， 多端同步就直接到位
   了。

3. 使用 Org 的 git 仓库

   #+begin_src bash
   $ git clone https://code.orgmode.org/bzg/org-mode.git

   $ cd org-mode/

   $ make autoloads
   #+end_src

   时刻与最新版本保持同步，很容易配置出问题。 为了稳定起见， 目前没采用这个办法。


不管你选择哪个方式， 安装成功后， 每当你打开 .org 后缀的文件时，Emacs 默认会使用
Org mode。

* 效率管理的原子 : Task

** State : 任务的状态变更

** Capture : 如何快速记录任务

** Archive : 归档历史任务

* 任务的分子: Meta-data

** Time Clocking : 记录任务用时

** Time Reporting: 时间都去哪儿了

** Tags : 换个角度看世界

** Properties: 再换个角度看看

* 杂项

** Tables : 其实我也能当 Excel 使

** Hypelinks: 把我当浏览器使也可以

** Export : 分享给不使用 Orgmode 的人
