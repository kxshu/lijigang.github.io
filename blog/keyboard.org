#+TITLE: 键盘应该这样改键
#+TAGS: 效率, Hack

** 为什么要改键

现在每天大约要使用电脑10个小时, 这中间至少有5个小时以上的时间, 是需要使用键
盘打字的. 所以对于打字速度的提升, 哪怕是只有一点, 对于整体效率也是一个极大的
促进.

而我对于打字速度的提升, 主要是从下面几方面入手:

1. 盲打

一边盯着键盘一边打字, 打了半天发现中间打错了, 再返回去修改, 这种打字方法严重
影响效率. 解决办法很简单, 练习盲打. 把键位给背熟, 形成肌肉记忆, 当你想按某个
键的时候, 不需经过你的思考, 手指已经条件反射地按到了那个键.

2. 五笔

最开始上网的时候, 只有「智能ABC」和「王码五笔」可以选择. 当时的「智能ABC」输
入法, 打字时重码特别多, 想要打准某个字, 需要翻好几页来选中目标项. 为了解决这
个问题, 当时就去学习了「五笔」输入法, 基本上不存在重码的问题. 当然, 现在的
「搜狗输入法」已经做到了词频智能调整, 你输入拼音后目标项一般都在前面, 如果不
是对五笔特别喜欢, 可以现代的拼音输入法, 也完全可以解决该问题.

3. 改键

现在绝大部分键盘的键位布局, 在 =Home Row= 上A键左边的键都设置为「Caps Lock」,
但我平时输入大写字母时, 都用的Shift键, 极少使用大写锁定键. 这么重要的一个位
置的键就这么被闲置浪费了. 而大部分键盘的 =Control= 键却又在左下角这么一个难
以在「盲打」情况下被精准按到的尴尬位置. 有尴尬就有解决的办法.

本文主要就是讲 =Macbook= 上怎么进行 =改键= , 使得按键更舒服, 打字效率更高.

** 键盘知识

键盘我们每天都在使用, 但你知道键盘上的按键都有哪些分类吗? 如果按 *单独按* 与
*组合按* 这一维度, 和 *短按* 与 *长按* 这一维度做个2*2矩阵:

[[./images/keymaps.png]]

1. 第一象限

   - 单独 & 短按
   - 75% 以上的击键都使用这个象限的键位
   - 包括字母, 数字, 部分符号等
   - 按下这区域键位, 显示器上即显示该符号

2. 第二象限

   - 单独 & 长按
   - 大约5%的击键使用的这个象限的键位
   - 包括Esc, Backspace, Delete等
   - 长按该区域键位, 重复执行该键位的功能

3. 第三象限

   - 组合 & 长按
   - 大约15%的击键使用的这个象限的键位
   - 包括Control, Shift, Alt等
   - 长按该区域键位, 同时再按第一象限键位, 发送事先指定功能

4. 第四象限

   - 组合 & 短按
   - 目前大部分键盘都不支持该区域按键
   - 可以通过软件设置, 支持该区域, 提供额外的命名空间


第一象限的按键是平时的正常文本输入区域, 无需做更改.

第二象限和第三象限, 可以组合起来使用, 即单独按某一按键时, 发送第二象限功能;
组合该键和第一象限键位时, 发送第三象限功能.

第四象限的按键可以通过软件设置, 将平时不太使用的键给映射为其它键. 相当于是增
加了一个额外的命名空间.

** 组合第二象限和第三象限

组合第二象限和第三象限的功能, 在Mac OS下只需要使用现在的软件, 勾选一下鼠标就
可以实现.

1. 下载安装 [[https://pqrs.org/osx/karabiner/index.html.en][Karabiner]]
2. 打开界面, 选中「Control_L to Control_L (+ When you type control_L only,
   send Escape)」

[[./images/karabiner.png]]
3. Done.

现在你单独按键盘左边的control键时, 发送的是Esc. (使用Vim的同学笑了~~). 按下
Control+其它键时, 仍然发送Control, 跟之前使用完全一样.


** Caps Lock改到Control

在Mac OS下, 把Caps Lock键映射到Control键, 系统设置就可以了.

1. 打开「System Preferences」
2. 选择「Keyboard」
3. 选择「Modifier Keys」
4. 把Caps Lock映射为Control
5. Done

[[./images/system_preference.png]]

总结下现在所做的工作:

1. 把Caps Lock映射成了Control
2. 把Control变成了单独按时, 发送Esc; 组合按时, 发送Control.

即, 我们现在单独按Caps Lock时, 发送Esc; 按下Caps Lock和c时, 会发送Control-C.

** 增加第四象限命名空间

我们可以为一个特定的键指定为多个按键的组合. 比如空格右侧的Command键, 映射为
Ctrl+Shift+Cmd+Opt , 这时, 当我按下右Command+f时, 即相当于按下了
「Ctrl+shift+Cmd+Opt+f」.

这种映射操作, 同样可以通过Karabiner完成.

1. 打开Karabiner
2. 选择「Misc & Uninstall」
3. 选择「Open private.xml」
4. 输入如下内容

#+BEGIN_SRC nxml

<?xml version="1.0"?>
<root>
    <item>
        <name>F19 to F19</name>
        <appendix>(F19 to Hyper (ctrl+shift+cmd+opt) + F19 Only, F19)</appendix>
        <identifier>private.f192f19</identifier>
        <autogen>
            --KeyOverlaidModifier--
            KeyCode::F19,
            KeyCode::COMMAND_L,
            ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
            KeyCode::ESCAPE
        </autogen>
    </item>
</root>

#+END_SRC

映射好了之后, 怎么使用?

最简单的一个使用办法, 就是将这个键做为应用程序激活快捷键. F19+F 激活Firefox,
F19+E激活Excel, 等等. 这个快捷键不会和其它按键冲突, 而且是全局生效, 你可以在
任意软件界面中按下这些组合键, 直接激活对应的程序.

设置应用程序激活快捷键, 可以通过软件[[http://www.keyboardmaestro.com/main/][Keyboard Maestro]]实现.
